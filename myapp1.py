import streamlit as st
import pandas as pd
from PIL import Image
import joblib

# Charger le mod√®le, le scaler et la liste des features n√©cessaires
try:
    model = joblib.load("xgb_best_model.pkl")  # Mod√®le ML
    scaler = joblib.load("scaler.pkl")  # Scaler pr√©-entra√Æn√©
    selected_features = joblib.load("features_list.pkl")  # Liste des features utilis√©es lors de l'entra√Ænement
except Exception as e:
    st.error(f"‚ö†Ô∏è Erreur lors du chargement des fichiers n√©cessaires : {e}")

# Barre lat√©rale avec image et description
try:
    sidebar_image = Image.open("shield.png")  # Remplacez par votre image
    st.sidebar.image(sidebar_image, caption="S√©curit√© IoT", use_container_width=True)
except Exception:
    st.sidebar.warning("‚ö†Ô∏è Impossible de charger l'image. Assurez-vous que le fichier 'shield.png' existe.")

st.sidebar.write("### Type d'Attaque")
class_mapping = {
    0: "ARP_poisioning",
    1: "DDOS_Slowloris",
    2: "DOS_SYN_Hping",
    3: "Metasploit_Brute_Force_SSH",
    4: "NMAP_FIN_SCAN",
    5: "NMAP_OS_DETECTION",
    6: "NMAP_TCP_scan",
    7: "NMAP_UDP_SCAN",
    8: "NMAP_XMAS_TREE_SCAN",
    9: "Normal"
}
class_mapping_df = pd.DataFrame(list(class_mapping.items()), columns=["Code", "Classe"])
st.sidebar.table(class_mapping_df)

# Titre et description principale
st.title("Syst√®me de D√©tection d'Attaques IoT")
st.write("""
### Bienvenue dans le Syst√®me de D√©tection d'Attaques IoT !
Cet outil pr√©dit le type d'attaque dans un r√©seau IoT en fonction des caract√©ristiques du trafic r√©seau.

#### √âtapes d'utilisation :
1. T√©l√©chargez un fichier CSV contenant les features n√©cessaires.
2. Consultez le type d'attaque dans la barre lat√©rale.
3. Obtenez les pr√©dictions bas√©es sur vos donn√©es.
""")

# Charger le fichier CSV
st.header("üìÇ Charger votre fichier CSV")
uploaded_file = st.file_uploader("T√©l√©chargez votre fichier CSV avec les features requises", type=["csv"])

if uploaded_file:
    try:
        # Charger les donn√©es
        input_data = pd.read_csv(uploaded_file)
        st.success("‚úÖ Fichier charg√© avec succ√®s ! Voici un aper√ßu des donn√©es :")
        st.write(input_data.head())

        # V√©rifier si toutes les colonnes n√©cessaires sont pr√©sentes
        missing_features = [feature for feature in selected_features if feature not in input_data.columns]
        if missing_features:
            st.error(f"‚ö†Ô∏è Les colonnes suivantes manquent dans votre fichier : {missing_features}")
        else:
            # Extraire uniquement les colonnes n√©cessaires
            input_data = input_data[selected_features]

            # Standardiser les donn√©es
            input_data_scaled = scaler.transform(input_data)

            # V√©rifier si l'utilisateur souhaite effectuer des pr√©dictions
            if st.button("Pr√©dire"):
                try:
                    predictions = model.predict(input_data_scaled)
                    input_data["Pr√©dictions"] = predictions
                    input_data["Type d'Attaque"] = input_data["Pr√©dictions"].map(class_mapping)

                    st.success("‚úÖ Pr√©dictions r√©alis√©es avec succ√®s !")
                    st.write(input_data.head())

                    # Exporter les pr√©dictions en CSV
                    csv = input_data.to_csv(index=False).encode("utf-8")
                    st.download_button(
                        label="T√©l√©charger les pr√©dictions au format CSV",
                        data=csv,
                        file_name="predictions.csv",
                        mime="text/csv",
                    )
                except Exception as pred_error:
                    st.error(f"‚ö†Ô∏è Une erreur s'est produite lors des pr√©dictions : {pred_error}")
    except Exception as e:
        st.error(f"‚ö†Ô∏è Une erreur s'est produite lors du chargement du fichier : {e}")
else:
    st.warning("‚ö†Ô∏è Veuillez t√©l√©charger un fichier CSV pour continuer.")

# Footer
st.markdown("---")
st.markdown("Propuls√© par **Streamlit** | Con√ßu pour l'analyse de s√©curit√© IoT")
